@model Car_Rental_Management.ViewModels.ForgotPasswordViewModel

@{
    ViewData["Title"] = "Forgot Password";
    Layout = "_Layout";
}

<!-- Video Background -->
<video autoplay muted loop playsinline id="bgVideo">
    <source src="@Url.Content("~/videos/Login.mp4")" type="video/mp4">
    Your browser does not support the video tag.
</video>

<!-- Centered Glass Card -->
<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg p-5 rounded-4 glass-card-dark animate__animated animate__fadeInDown"
         style="width: 100%; max-width: 400px; position: relative; z-index: 2;">

        <!-- Title -->
        <h3 class="text-center mb-4 text-info fw-bold">Reset Your Password</h3>

        <!-- Success & Error Messages -->
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger">@ViewBag.Error</div>
        }
        @if (ViewBag.Success != null)
        {
            <div class="alert alert-success">@ViewBag.Success</div>
        }

        <!-- Form Start -->
        <form asp-action="ForgotPassword" method="post" novalidate class="needs-validation">
            @Html.AntiForgeryToken()

            <!-- Username -->
            <div class="form-group mb-3">
                <label asp-for="Username" class="fw-semibold text-light"></label>
                <div class="input-group">
                    <span class="input-group-text bg-dark text-white border-secondary">
                        <i class="bi bi-person-fill text-info"></i>
                    </span>
                    <input asp-for="Username" class="form-control bg-dark text-white border-secondary"
                           placeholder="Enter your username" required pattern="^[a-zA-Z0-9]{4,20}$" />
                </div>
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>

            <!-- Email -->
            <div class="form-group mb-3">
                <label asp-for="Email" class="fw-semibold text-light"></label>
                <div class="input-group">
                    <span class="input-group-text bg-dark text-white border-secondary">
                        <i class="bi bi-envelope-fill text-info"></i>
                    </span>
                    <input asp-for="Email" type="email" class="form-control bg-dark text-white border-secondary"
                           placeholder="Enter your registered email" required />
                </div>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <!-- New Password -->
            <div class="form-group mb-4">
                <label asp-for="NewPassword" class="fw-semibold text-light"></label>
                <div class="input-group">
                    <span class="input-group-text bg-dark text-white border-secondary">
                        <i class="bi bi-lock-fill text-info"></i>
                    </span>
                    <input asp-for="NewPassword" type="password" class="form-control bg-dark text-white border-secondary"
                           placeholder="Enter new password" id="newPassword" required pattern=".{6,}" />
                    <span class="input-group-text bg-dark text-white border-secondary" style="cursor:pointer;" onclick="togglePassword()">
                        <i class="bi bi-eye-slash-fill text-info" id="toggleIcon"></i>
                    </span>
                </div>
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-info w-100 py-2 fw-bold rounded-3 btn-hover">
                Reset Password
            </button>

            <!-- Back to Login -->
            <p class="text-center mt-4 text-light">
                <a asp-action="Login" class="text-info text-decoration-none fw-semibold">Back to Login</a>
            </p>
        </form>
    </div>
</div>

<!-- Scripts -->
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword() {
            const input = document.getElementById('newPassword');
            const icon = document.getElementById('toggleIcon');
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.replace('bi-eye-slash-fill', 'bi-eye-fill');
            } else {
                input.type = 'password';
                icon.classList.replace('bi-eye-fill', 'bi-eye-slash-fill');
            }
        }

        // Bootstrap validation
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}
<style>
    /* Fullscreen background video */
    #bgVideo {
        position: fixed;
        right: 0;
        bottom: 0;
        min-width: 100%;
        min-height: 100%;
        object-fit: cover;
        z-index: -1;
        filter: brightness(0.6); /* optional: dim the video */
    }

    /* Glassmorphism card */
    .glass-card-dark {
        background: rgba(30, 30, 30, 0.55);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.15);
        box-shadow: 0 8px 32px rgba(0,0,0,0.35);
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .glass-card-dark:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(0,0,0,0.5);
        }

    /* Button hover effect */
    .btn-hover {
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .btn-hover:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }

    /* Placeholder and text colors */
    ::placeholder {
        color: rgba(255,255,255,0.7) !important;
        opacity: 1;
    }

    input, select {
        color: #ffffff;
    }
</style>



